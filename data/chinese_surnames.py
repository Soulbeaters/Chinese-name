# -*- coding: utf-8 -*-
"""
中文姓氏完整数据库 / Полная база китайских фамилий
包含所有常见姓氏 / Содержит все распространенные фамилии
"""

# 单字姓氏（按拼音排序） / Односложные фамилии (по пиньинь)
SINGLE_SURNAMES = {
    '艾', '安', '敖', '巴', '白', '柏', '班', '包', '鲍', '暴',
    '贝', '贲', '边', '卞', '别', '宾', '薄', '卜', '步', '才',
    '蔡', '苍', '曹', '查', '柴', '昌', '常', '晁', '车', '陈',
    '成', '程', '池', '迟', '充', '仇', '丑', '储', '楚', '褚',
    '崔', '戴', '刀', '邓', '狄', '刁', '丁', '定', '东', '董',
    '窦', '杜', '段', '端', '敦', '多', '鄂', '樊', '范', '方',
    '房', '费', '封', '冯', '凤', '符', '伏', '扶', '福', '傅',
    '富', '盖', '甘', '干', '高', '葛', '耿', '弓', '宫', '巩',
    '贡', '苟', '古', '谷', '顾', '关', '管', '郭', '桂', '国',
    '韩', '杭', '郝', '何', '贺', '赫', '衡', '洪', '侯', '后',
    '胡', '花', '华', '怀', '桓', '黄', '惠', '霍', '吉', '姬',
    '计', '纪', '贾', '简', '江', '姜', '蒋', '焦', '揭', '金',
    '晋', '景', '井', '荆', '居', '鞠', '康', '柯', '孔', '寇',
    '匡', '邝', '况', '赖', '蓝', '郎', '劳', '乐', '雷', '冷',
    '黎', '李', '力', '历', '连', '廉', '梁', '廖', '林', '凌',
    '刘', '柳', '龙', '娄', '卢', '鲁', '陆', '路', '栾', '罗',
    '骆', '吕', '律', '麻', '马', '麦', '满', '茅', '毛', '梅',
    '孟', '米', '苗', '闵', '明', '缪', '莫', '墨', '牟', '母',
    '穆', '倪', '聂', '宁', '牛', '农', '欧', '区', '潘', '庞',
    '裴', '彭', '皮', '蒲', '浦', '戚', '祁', '齐', '钱', '强',
    '乔', '秦', '邱', '丘', '曲', '屈', '全', '冉', '饶', '任',
    '荣', '阮', '芮', '桑', '沙', '山', '商', '邵', '佘', '申',
    '沈', '盛', '施', '时', '石', '史', '舒', '帅', '双', '水',
    '司', '松', '宋', '苏', '孙', '索', '谈', '谭', '汤', '唐',
    '陶', '滕', '田', '童', '涂', '万', '汪', '王', '危', '韦',
    '魏', '温', '文', '闻', '翁', '巫', '邬', '吴', '伍', '武',
    '席', '习', '夏', '鲜', '冼', '相', '向', '项', '肖', '谢',
    '辛', '邢', '幸', '熊', '徐', '许', '宣', '薛', '荀', '闫',
    '严', '颜', '晏', '阎', '杨', '羊', '养', '姚', '叶', '易',
    '殷', '尹', '应', '英', '游', '于', '余', '俞', '虞', '鱼',
    '禹', '袁', '岳', '云', '臧', '曾', '翟', '詹', '占', '张',
    '章', '赵', '郑', '钟', '仲', '周', '朱', '竺', '祝', '庄',
    '卓', '宗', '邹', '祖', '左',
}

# 复合姓氏 / Составные фамилии
COMPOUND_SURNAMES = {
    '爱新觉罗', '澹台', '第五', '东方', '东郭', '东门', '独孤', '端木',
    '公羊', '公孙', '公西', '公冶', '谷梁', '赫连', '呼延', '皇甫',
    '令狐', '闾丘', '欧阳', '濮阳', '漆雕', '钦明', '上官', '申屠',
    '司徒', '司空', '司寡', '司马', '司徒', '太叔', '闻人', '巫马',
    '夏侯', '鲜于', '轩辕', '羊舌', '宇文', '尉迟', '长孙', '仲孙',
    '诸葛', '左丘', '南宫', '西门', '百里', '淳于', '单于', '第二',
    '第八', '东野', '段干', '公良', '谷利', '公户', '毌丘', '梁丘',
    '墨哈', '万俟', '微生', '鲜于', '羊角', '宰父', '主父', '宗政',
}

# 所有姓氏集合 / Все фамилии
ALL_SURNAMES = SINGLE_SURNAMES | COMPOUND_SURNAMES


def is_surname(text: str) -> bool:
    """判断是否为姓氏 / Проверка фамилии"""
    if not text:
        return False
    # 检查复合姓
    for length in [4, 3, 2]:
        if len(text) >= length and text[:length] in COMPOUND_SURNAMES:
            return True
    # 检查单字姓
    return text[0] in SINGLE_SURNAMES


def get_surname_from_text(text: str) -> str:
    """从文本中提取姓氏 / Извлечение фамилии из текста"""
    if not text:
        return ''
    # 先检查复合姓
    for length in [4, 3, 2]:
        if len(text) >= length and text[:length] in COMPOUND_SURNAMES:
            return text[:length]
    # 再检查单字姓
    if text[0] in SINGLE_SURNAMES:
        return text[0]
    return ''


if __name__ == '__main__':
    print(f"单字姓数量: {len(SINGLE_SURNAMES)}")
    print(f"复合姓数量: {len(COMPOUND_SURNAMES)}")
    print(f"总计: {len(ALL_SURNAMES)}")
